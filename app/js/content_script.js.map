{"version":3,"sources":["content_script.js"],"names":["parseUri","str","o","options","m","exec","uri","i","key","q","replace","parser","$0","$1","$2","name","get_FbAdLinks","posts","getElementsByClassName","document","post","querySelector","ads_arr","ad_posts","map","border","post_info","href","parsed_ad","textContent","advertiser_name","ad_obj","feed_info","num_posts","length","ads","processAd","ad","advertiser","isPlaced","queryKey","hasOwnProperty","parseInt","placement","get_TwitterAdLinks","feed","tweets","loadTweetsAndMightLike","tweet","firstElementChild","classList","contains","ad_tweet","getAttribute","ad_info","indexOf","timeline","tweets_arr","Array","children","forEach","item","hasAttribute","push","find","child","tagName","from","recap_list","checkDomain","url","link","host","includes","protocol","getLinks","domainIs","URL","getElementById","chrome","num_ads","addEventListener","toString","runtime","subject","storage","set","sendMessage","strictMode","strict"],"mappings":"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","file":"content_script.js","sourcesContent":["(function() {\n  // CHECK IF CURRENT PAGE IS FACEBOOK\n  if (document.URL.includes('facebook.com')) {\n    if (document.getElementById('mainContainer')) {\n      // SET OR RESET STORED DATA TRACKING SUBMISSIONS TO DATABASE\n      chrome.storage.local.set({\n        num_ads: 0\n      });\n      // UPDATE DATA AS FACEBOOK LOADS MORE ADS/POSTS ON SCROLL\n      document.addEventListener('scroll', function() {\n        // PROCESS ADS/POSTS\n        var feed_info = getLinks(document.URL);\n        // PARSE NUMBER OF ADS TO APPEAR IN EXTENSION BADGE\n        var num_ads = feed_info ? feed_info.ads.length.toString() : '0';\n        // SEND DATA TO EVENT PAGE (BACKGROUND.JS)\n        chrome.runtime.sendMessage({\n          from: 'content_script',\n          subject: 'postLinks',\n          badge_num: num_ads,\n          ad_data: feed_info\n        });\n      });\n    }\n  } else if (document.URL.includes('twitter.com')) {\n    // SET OR RESET STORED DATA TRACKING SUBMISSIONS TO DATABASE\n    chrome.storage.local.set({\n      num_ads: 0\n    });\n    // UPDATE DATA AS TWITTER LOADS MORE ADS/POSTS ON SCROLL\n    document.addEventListener('scroll', function() {\n      // PROCESS ADS/POSTS\n      var feed_info = getLinks(document.URL);\n      // PARSE NUMBER OF ADS TO APPEAR IN EXTENSION BADGE\n      var num_ads = feed_info ? feed_info.ads.length.toString() : '0';\n      // SEND DATA TO EVENT PAGE (BACKGROUND.JS)\n      chrome.runtime.sendMessage({\n        from: 'content_script',\n        subject: 'postLinks',\n        badge_num: num_ads,\n        ad_data: feed_info\n      });\n    });\n  } else {\n    // SET BADGE NUMBER TO 0 IF NOT FACEBOOK OR TWITTER\n    chrome.runtime.sendMessage({\n      from: 'content_script',\n      subject: 'postLinks',\n      badge_num: '0'\n    });\n  }\n  // CONVERT LINK INTO PARSEABLE OBJECT\n  function parseUri(str) {\n    var o = parseUri.options,\n      m = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n      uri = {},\n      i = 14;\n\n    while (i--) uri[o.key[i]] = m[i] || \"\";\n\n    uri[o.q.name] = {};\n    uri[o.key[12]].replace(o.q.parser, function($0, $1, $2) {\n      if ($1) uri[o.q.name][$1] = $2;\n    });\n\n    return uri;\n  }\n\n  parseUri.options = {\n    strictMode: false,\n    key: [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\", \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"],\n    q: {\n      name: \"queryKey\",\n      parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n    },\n    parser: {\n      strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n      loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n    }\n  };\n  // PROCESS ADS/POSTS\n  function get_FbAdLinks() {\n    // GET LIST OF ALL POSTS IN FEED, INCLUDING ADS\n    var posts = document.getElementsByClassName('_4-u2 mbm _5v3q _4-u8');\n    // FILTER POSTS LISTS FOR ADS\n    var ad_posts = Array.from(posts).filter(function(post) {\n      return post.querySelector('a._3e_2._m8c');\n    });\n    // PROCESS ADS\n    var ads_arr = ad_posts.map(function(post) {\n      // HIGHLIGHT ADS IN FEED\n      post.style.border = '4px solid #FF8080';\n      // GET CHILD THAT CONTAINS AD INFO\n      var post_info = post.querySelector('a._5pb8._8o._8s.lfloat._ohe');\n      // GET FEED PLACEMENT INFO FROM THAT CHILD\n      var parsed_ad = parseUri(post_info.href);\n      // GET ADVERTISER NAME FROM THAT CHILD\n      var advertiser_name = (post.querySelector('span.fwb.fcg a')) ? post.querySelector('span.fwb.fcg a').textContent : '';\n      // SEND FEED PLACEMENT INFO AND ADVERTISER NAME FOR PROCESSING\n      var ad_obj = processAd(parsed_ad, advertiser_name);\n      // ADD PROCESSED AD OBJECT TO ARRAY\n      return ad_obj;\n    });\n    // CONVERT DATA INTO OBJECT: NUM_POSTS FOR BADGE AND AD LOAD, ADS FOR ITEMIZED LIST IN POPUP\n    var feed_info = {\n      num_posts: posts.length,\n      ads: ads_arr\n    };\n\n    return feed_info;\n  }\n  // CONVERT FACEBOOK AD DATA INTO OBJECT FOR ITEMIZED LIST IN POPUP\n  function processAd(ad, advertiser) {\n    const ad_obj = {\n      advertiser: advertiser,\n      isPlaced: ad.queryKey.hasOwnProperty('ft[insertion_position]'),\n      placement: (ad.queryKey['ft[insertion_position]']) ? parseInt(ad.queryKey['ft[insertion_position]'], 10) + 1 : 0\n    }\n    return ad_obj;\n  }\n  // PROCESS TWITTER ADS/POSTS\n  function get_TwitterAdLinks() {\n    // GET MAIN FEED\n    let feed = document.querySelector('ol#stream-items-id');\n    // GET ARRAY OF ALL TWEETS IN MAIN FEED\n    let tweets = loadTweetsAndMightLike(feed);\n    // FILTER TWEETS ARRAY FOR ADS\n    let ads = tweets.filter(function(tweet) {\n      return tweet.firstElementChild.classList.contains('promoted-tweet');\n    });\n    // PROCESS ADS\n    let ads_arr = ads.map(function(ad) {\n      let ad_tweet = ad.firstElementChild;\n      ad_tweet.style.border = '4px solid #FF8080';\n\n      let ad_info = {\n        advertiser: ad_tweet.getAttribute('data-name') ? ad_tweet.getAttribute('data-name') : 'No name given',\n        isPlaced: (tweets.indexOf(ad) !== -1) ? true : false,\n        placement: tweets.indexOf(ad) + 1\n      }\n      return ad_info;\n    });\n    // CONVERT DATA INTO OBJECT: NUM_POSTS FOR BADGE AND AD LOAD, ADS FOR ITEMIZED LIST IN POPUP\n    var feed_info = {\n      num_posts: tweets.length,\n      ads: ads_arr\n    };\n\n    return feed_info;\n  }\n  // LOAD TWEETS FROM MAIN FEED AND FROM YOU MIGHT LIKE SECTION\n  function loadTweetsAndMightLike(timeline) {\n    // ARRAY TO STORE EACH TWEET\n    let tweets_arr = [];\n    // CHECK TIMELINE FOR TWEETS IN MAIN FEED AND YOU MIGHT LIKE SECTION\n    Array.from(timeline.children).forEach(function(item) {\n      if (item.hasAttribute('data-item-type')) {\n        // CHECK IF MAIN FEED TWEET\n        if (item.getAttribute('data-item-type') === 'tweet') {\n          tweets_arr.push(item);\n        } else {\n          // CHECK IF YOU MIGHT LIKE SECTION\n          if (item.classList.contains('has-recap')) {\n            // GET TWEET FEED FROM YOU MIGHT LIKE SECTION\n            let recap_list = Array.from(item.children).find(function(child) {\n              return child.tagName === 'OL';\n            });\n            // GET TWEETS FROM YOU MIGHT LIKE SECTION\n            Array.from(recap_list.children).forEach(function(tweet) {\n              tweets_arr.push(tweet);\n            });\n          }\n        }\n      }\n    });\n    return tweets_arr;\n  }\n  // CHECK IF GETTING LINKS FOR FACEBOOK OR TWITTER\n  function checkDomain(url) {\n    // CONVERT LINK INTO OBJECT\n    var link = parseUri(url);\n    // CHECK THAT LINK IS FOR SECURE FACEBOOK SITE\n    if ((link.protocol === 'https') && link.host.includes('facebook.com')) {\n      return 'facebook';\n    } else if ((link.protocol === 'https') && link.host.includes('twitter.com')) {\n      return 'twitter';\n    } else {\n      return false;\n    }\n  }\n  // GRAB AD/POST DATA\n  function getLinks(url) {\n    // VERIFY THAT CHECKING FOR FACEBOOK OR TWITTER\n    var domainIs = checkDomain(url);\n    if (domainIs === 'facebook') {\n      return get_FbAdLinks();\n    } else if (domainIs === 'twitter') {\n      return get_TwitterAdLinks();\n    } else {\n      return false;\n    }\n  }\n})();\n"]}